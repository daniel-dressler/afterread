<?php
/*  
	The afterRead core and bundled 'suggestions' are under GPL:
	http://www.opensource.org/licenses/gpl-license.php
	Suggestions that did not come with a default afterRead install may or may not be gpl, it is the Suggestion author's choice.
	
	Feel free to fork or build off of this core, I would be honnored for my code base to live on and help others.
	This also includes striping features and releasing a suggestion as a stand alone plugin.
	
	Of course all these rights are included in the GPL, I just wanted to repeat them in a more personal tone.
*/


/*
Plugin Name: afterRead
Plugin URI: http://blog.warll.com
Description: Provides 'suggestions' to readers at the end of articles as to what to do next, ie; read related articles, donate, read next article in category, etc
Version: .3
Author: Warll.Dressler
Author URI: http://blog.warll.com
*/

//registers a afterRead function to be ran when wordpress is generating the post for display to the user, is generated everytime the page is called unless otherwise cached
add_filter( "the_content", "afterRead_main", 0 ); 

//Runs afterRead_activation() when the plugin is activated
register_activation_hook('afterRead.php', 'afterRead_activation');
function afterRead_activation(){
	//the afterRead settings page will save a blank option by default if the field is not populated. Thus the option is by default populated here when the user activates the plugin
	update_option( 'afterRead_suggestion_name', 'default' );
	update_option( 'afterRead_custom_html', '<hr />Go to the main <a href="'.get_option('home').'/"> page </a><hr />');
}

//the main function, it will php_include the sugestion template allowing the template to contain php, it then returns the results.
function afterRead_main($afterRead_content) {
	if(is_single()){
	//retrives the suggestion's name or defaults to "default" should it be false.
	$afterRead_sugestion_name = get_option( 'afterRead_suggestion_name', 'default' );
	//formate the full file name by adding the extension and the template folder to the stored path
	$afterRead_sugestion_php = 'suggestions/'.$afterRead_sugestion_name.'.php';
	//include the suggestion's code so that it can define suggestion stored in the $afterRead_sugestion varible
	include $afterRead_sugestion_php;
	$afterRead_plugin_tag='<!--Generated by afterRead plugin using the '.$afterRead_sugestion_name.' suggestion-->';
	//merge the wordpress post(afterRead_content) with the suggestion ($afterRead_sugestion)
	$afterRead_content = $afterRead_content.$afterRead_plugin_tag.$afterRead_sugestion;
	//return the content for further proccesing by wordpress
	return $afterRead_content;
	}
	else {
	//since this post is being proccessed for display on the frontpage we do not want to include the afterRead suggestion but we still have to return the content
	return $afterRead_content;
	}
}

//This tells wordpress to add the afterRead page to the 'settings' menu
add_action('admin_menu', 'afterRead_menu');
function afterRead_menu() {
  add_options_page('afterRead Options', 'afterRead', 'administrator', 'afterRead_options', 'afterRead_options');
  add_action( 'admin_init', 'register_afterReadsettings' );
}

//This is a required wordpress function that tells wordpress what options afterRead so that wordpress can do a bunch of backend stuff, saving me time and a headache
function register_afterReadsettings() {
	register_setting( 'afterRead-settings-group', 'afterRead_suggestion_name' );
	register_setting( 'afterRead-settings-group', 'afterRead_custom_html' );
	register_setting( 'afterRead-settings-group', 'afterRead_option_ichi' );
	register_setting( 'afterRead-settings-group', 'afterRead_option_ni' );
	register_setting( 'afterRead-settings-group', 'afterRead_option_san' );
}

//This is the function that creates the afterRead admin/settings page, sadly wordpress has really poor documentation for creating admin pages, or it is hidden waaaayyy too well, either way this part was a headache and a halve and required digging through otehr plugin setting pages to get looking right
function afterRead_options() {
?>
<div class="wrap">
	<h2><font color="#657383">after</font><font color="#E42217">Read</font></h2>
	<form method="post" action="options.php">
		<?php settings_fields( 'afterRead-settings-group', 'afterRead' ); ?>
		<table class="form-table">
			<h3><?php __('Suggestion selection', 'afterRead')?></h3>
			<tr valign="top">
				<th scope="row"><?php __("Select Suggestion", 'afterRead') ?></th>
				<td>
					<select name="afterRead_suggestion_name">
					<?php // create an array to hold directory list
					$results = array();
					$afterRead_selected = "";
					// create a handler for the directory
					$handler = opendir(dirname(__FILE__).'/suggestions/');
					// keep going until all files in directory have been read
					while ($file = readdir($handler)) {
						// if $file isn't this directory or its parent, 
						// add it to the results array
						$file = str_replace(".php","",$file);
						if ($file != '.' && $file != '..')
							$results[] = $file;
						}
					// tidy up: close the handler
					closedir($handler);
					global $afterRead_cache_selected;
					$afterRead_cache_selected = get_option('afterRead_suggestion_name');
					foreach ($results as $value) {
						global $afterRead_cache_selected, $afterRead_selected;
						if (strcmp($value, $afterRead_cache_selected) == 0){
							global $afterRead_selected;
							$afterRead_selected = " selected";
						} else {
							global $afterRead_selected;
							$afterRead_selected = "";
						}
						?><option value="<?php echo $value?>" <?php echo $afterRead_selected ?>><?php echo $value ?></option>
					<?php
					}
					?>
				  </select>
			  </td>
		  </tr>
		</table>
		<input type="submit" class="button-primary" value="<?php __('Save selection', 'afterRead') ?>" />
	</form>
	
	<form method="post" action="options.php">
		<h3><?php __('Suggestion options', 'afterRead')?></h3>
		<?php __('These options are used differently by each suggestion, many suggestions will not use them at all.', 'afterRead')?>
		<table class="form-table">
			<tr valign="top">
				<th scope="row"><?php __('Custom HTML and Text', 'afterRead') ?></th>
				<td><input type="text" size="30" name="afterRead_custom_html" value="<?php $option = get_option('afterRead_custom_html'); $option = htmlspecialchars($option); echo $option //the formating is done out in long here to show what is happening, it is shortened else where ?>" /></td>
			</tr>
			
			<?php // These options are to be used by the suggestion files as loose options, thus allow a suggestion creater to extreme freedom in options, this is instead of having predefined fields which would require updates to the afterRead core should a suggestion author want to offer expanded customization.
			// The options are named using the Japanese number system. I choose to do it this way because most users will not know that they are really numbers, thus renforcing the loose nature of the options.?>
			
			<tr valign="top">
				<th scope="row"><?php __('Option Ichi', 'afterRead') ?></th>
				<td><input type="text" size="30" name="afterRead_option_ichi" value="<?php echo htmlspecialchars(get_option('afterRead_option_ichi')); ?>" /></td>
			</tr>
			
			<tr valign="top">
				<th scope="row"><?php __('Option Ni', 'afterRead') ?></th>
				<td><input type="text" size="30" name="afterRead_option_ni" value="<?php echo htmlspecialchars(get_option('afterRead_option_ni')); ?>" /></td>
			</tr>
			
			<tr valign="top">
				<th scope="row"><?php __('Option San', 'afterRead') ?></th>
				<td><input type="text" size="30" name="afterRead_option_san" value="<?php echo htmlspecialchars(get_option('afterRead_option_san')); ?>" /></td>
			</tr>
			
		</table>
		
		<p class="submit">
			<input type="submit" class="button-primary" value="<?php __('Save Options', 'afterRead') ?>" />
		</p>
	</form>
	
	<p><?php __('The contents of the suggestion "', 'afterRead')echo get_option('afterRead_suggestion_name').'.php'?>" <br /> 
		<textarea class="large-text code" rows="13">
			<?php echo htmlspecialchars(file_get_contents(dirname(__FILE__).'/suggestions/'.get_option('afterRead_suggestion_name').'.php')) ?>
		</textarea>
	</p>
		
	<form method="post" action="<?php echo dirname(__FILE__).'/save_sugegstion.php'?>">
		<tr valign="top">
			<th scope="row"><?php __('Name of new suggestion:', 'afterRead') ?>
				<input type="text" size="15" name="suggestion_new_name" value="" />
			</th>
		</tr>
	</form>
		
	This plugin was develouped by <a href="http://blog.warll.com">Warll Dressler</a>, <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=10944285">donations</a> are apreciated yet really all I want is to write something that others find useful, if there is something you think afterRead needs please <a href="mailto:warll.dressler@gmail.com">email</a> me or leave a comment on this blog post.
</div>
<?php }
//I am a novice programmer, I hope I have not written anything that might cause someone with more experince to spill tea, if I have please email me, WARLL.DRESSLER@GMAIL.COM , either way thank you for exploring my code.
?>